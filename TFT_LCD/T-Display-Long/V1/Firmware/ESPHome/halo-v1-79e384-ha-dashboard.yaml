# ============================================================================
# Halo V1 - Dynamic Configuration for HA Dashboard (ESPHome 2025.10.0+)
# ============================================================================
# This version is optimized for Home Assistant ESPHome Dashboard compilation.
# All packages are loaded via GitHub URLs to avoid file copying requirements.
#
# âœ… BLE + WEATHER NOW POSSIBLE!
#   Old: BLE (60KB) + Weather sensors (75KB) = Too tight!
#   New: BLE (60KB) + HA Actions (3KB) = Plenty of room!
# ============================================================================

# ============================================================================
# FEATURE FLAGS - Enable/Disable Features
# ============================================================================
substitutions:
  # Device Identity
  name: "halo-v1-79e384"
  friendly_name: "Halo Air Quality Monitor Dev"

  # Core substitutions needed by Halo-v1-Core
  version: "25.10.30.1828"
  device_description: ${name} - v${version}.

  # Display Features
  feature_clock: "true"              # Always true (core feature)
  feature_airq: "false"              # Air quality display page
  feature_wifi_page: "false"         # WiFi info display page
  feature_wireguard: "false"         # WireGuard VPN (requires wifi_page)

  # Weather Features (NEW - uses HA Actions!)
  feature_weather: "false"           # Enable weather via HA actions
  weather_entity_id: "weather.hhut"  # Your HA weather entity
  weather_refresh_interval: "900"    # Seconds (15 min default)

  # Connectivity Features
  feature_ble: "false"               # BLE presence detection

  # Memory Management
  feature_psram_optimization: "true" # Keep enabled for best performance
  feature_memory_stats: "true"       # Show memory usage stats

  # Network Configuration
  wifi_ssid: !secret wifihome_ssid
  wifi_password: !secret wifihome_password

  # Security
  api_encryption_key: "mLKXHYyBZgGLfMiXyWoo3Fzc/TpqbKpk0g+uYAwErMs="
  ota_password: "halo79e384"

  # ============================================================================
  # AUTOMATIC PACKAGE SELECTION (Jinja2)
  # ============================================================================
  # Change the feature flags above and packages auto-select!

  airq_package_file: '{{ "airq-display.yaml" if feature_airq | bool else "airq-stubs.yaml" }}'
  ble_package_file: '{{ "ble-core-simplified.yaml" if feature_ble | bool else "ble-stubs.yaml" }}'
  wifi_package_file: '{{ "wifi-display.yaml" if feature_wifi_page | bool else "wifi-stubs.yaml" }}'
  weather_package_file: '{{ "weather-ha-actions.yaml" if feature_weather | bool else "weather-stubs.yaml" }}'
  wireguard_package_file: '{{ "wireguard.yaml" if (feature_wireguard | bool and feature_wifi_page | bool) else "wireguard-stubs.yaml" }}'

  # LVGL pages - automatically picks the right combination!
  lvgl_pages_file: >-
    {%- set airq = feature_airq | bool -%}
    {%- set wifi = feature_wifi_page | bool -%}
    {%- set wg = feature_wireguard | bool -%}
    {%- set weather = feature_weather | bool -%}
    {%- if not airq and not wifi and not weather -%}
      lvgl-pages-clock-only.yaml
    {%- elif airq and not wifi and not weather -%}
      lvgl-pages-airq-only.yaml
    {%- elif not airq and wifi and not wg and not weather -%}
      lvgl-pages-wifi-only.yaml
    {%- elif not airq and wifi and wg and not weather -%}
      lvgl-pages-wifi-wireguard.yaml
    {%- elif airq and wifi and not wg and not weather -%}
      lvgl-pages-airq-wifi.yaml
    {%- elif not airq and not wifi and weather -%}
      lvgl-pages-weather-forecast-only.yaml
    {%- elif airq and not wifi and weather -%}
      lvgl-pages-airq-weather-forecast-only.yaml
    {%- elif not airq and wifi and weather -%}
      lvgl-pages-wifi-weather-forecast-only.yaml
    {%- elif airq and wifi and weather -%}
      lvgl-pages-airq-wifi-weather-forecast.yaml
    {%- else -%}
      lvgl-pages-clock-only.yaml
    {%- endif -%}

# ============================================================================
# PACKAGE IMPORTS
# ============================================================================
packages:
  # Essential core packages - using generic labels to avoid component name conflicts
  pkg_a:
    url: https://github.com/truffshuff/halo.git
    ref: main
    files: [TFT_LCD/T-Display-Long/V1/Firmware/ESPHome/packages/page-registry.yaml]
    refresh: always

  pkg_b:
    url: https://github.com/truffshuff/halo.git
    ref: main
    files: [TFT_LCD/T-Display-Long/V1/Firmware/ESPHome/packages/vertical-clock-core.yaml]
    refresh: always

  pkg_c:
    url: https://github.com/truffshuff/halo.git
    ref: main
    files: [TFT_LCD/T-Display-Long/V1/Firmware/ESPHome/packages/time-update-basic.yaml]
    refresh: always

  pkg_d:
    url: https://github.com/truffshuff/halo.git
    ref: main
    files: [TFT_LCD/T-Display-Long/V1/Firmware/ESPHome/packages/psram-helpers.yaml]
    refresh: always

  # Automatic feature packages (Jinja2 conditional loading)
  pkg_airq:
    url: https://github.com/truffshuff/halo.git
    ref: main
    files:
      - TFT_LCD/T-Display-Long/V1/Firmware/ESPHome/packages/${airq_package_file}
    refresh: always

  pkg_ble:
    url: https://github.com/truffshuff/halo.git
    ref: main
    files:
      - TFT_LCD/T-Display-Long/V1/Firmware/ESPHome/packages/${ble_package_file}
    refresh: always

  pkg_wifi:
    url: https://github.com/truffshuff/halo.git
    ref: main
    files:
      - TFT_LCD/T-Display-Long/V1/Firmware/ESPHome/packages/${wifi_package_file}
    refresh: always

  pkg_weather:
    url: https://github.com/truffshuff/halo.git
    ref: main
    files:
      - TFT_LCD/T-Display-Long/V1/Firmware/ESPHome/packages/${weather_package_file}
    refresh: always

  pkg_wireguard:
    url: https://github.com/truffshuff/halo.git
    ref: main
    files:
      - TFT_LCD/T-Display-Long/V1/Firmware/ESPHome/packages/${wireguard_package_file}
    refresh: always

  pkg_pages:
    url: https://github.com/truffshuff/halo.git
    ref: main
    files:
      - TFT_LCD/T-Display-Long/V1/Firmware/ESPHome/packages/${lvgl_pages_file}
    refresh: always

# ============================================================================
# CORE CONFIGURATION (from Halo-v1-Core.yaml - inlined for HA dashboard)
# ============================================================================

psram:
  mode: octal
  speed: 80MHz

esp32:
  board: esp32-s3-devkitc-1
  flash_size: 16MB
  cpu_frequency: 240MHz
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_SPIRAM_USE: "y"
      CONFIG_SPIRAM_MODE_OCT: "y"
      CONFIG_SPIRAM_SPEED_80M: "y"
      CONFIG_SPIRAM_USE_MALLOC: "y"
      CONFIG_SPIRAM_MALLOC_ALWAYSINTERNAL: "4096"
      CONFIG_BT_NIMBLE_MEM_ALLOC_MODE_EXTERNAL: "y"
      CONFIG_BT_NIMBLE_USE_ESP_TIMER: "y"
      CONFIG_BT_NIMBLE_MAX_CONNECTIONS: "4"
      CONFIG_BT_NIMBLE_HOST_TASK_STACK_SIZE: "8192"
      CONFIG_LWIP_TCPIP_RECVMBOX_SIZE: "64"
      CONFIG_LWIP_TCP_RECVMBOX_SIZE: "24"
      CONFIG_LWIP_UDP_RECVMBOX_SIZE: "24"
      CONFIG_SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY: "y"
      CONFIG_LV_MEM_CUSTOM: "y"
      CONFIG_LV_MEM_CUSTOM_ALLOC_EXTERNAL: "y"
      CONFIG_LV_MEM_SIZE: "262144"
      CONFIG_SPIRAM_TRY_ALLOCATE_WIFI_LWIP: "y"
      CONFIG_ESP_WIFI_STATIC_RX_BUFFER_NUM: "16"
      CONFIG_ESP_WIFI_DYNAMIC_RX_BUFFER_NUM: "32"
      CONFIG_ESP_WIFI_DYNAMIC_TX_BUFFER_NUM: "32"
      CONFIG_ESP_WIFI_RX_BA_WIN: "32"
      CONFIG_ESP_WIFI_TX_BA_WIN: "32"
      CONFIG_ESP_WIFI_RX_MGMT_BUF_NUM: "32"
      CONFIG_ESP_TASK_WDT_TIMEOUT_S: "12"
      CONFIG_FREERTOS_IDLE_TASK_STACKSIZE: "4096"
      CONFIG_SPIRAM_MALLOC_RESERVE_INTERNAL: "16384"
      CONFIG_ESP_MAIN_TASK_STACK_SIZE: "12288"
      CONFIG_FREERTOS_THREAD_LOCAL_STORAGE_POINTERS: "2"
      CONFIG_FREERTOS_USE_STATIC_TASK_CLEAN_UP: "y"
      CONFIG_LWIP_MAX_SOCKETS: "24"
      CONFIG_LWIP_SO_RCVBUF: "y"
      CONFIG_LWIP_SO_RCVBUF_DEFAULT: "8192"
      CONFIG_TCP_MAXRTX: "16"
      CONFIG_TCP_SYNMAXRTX: "8"
      CONFIG_HEAP_TRACING_STANDALONE: "y"
      CONFIG_HEAP_TRACING: "y"
      CONFIG_HEAP_TASK_TRACKING: "y"
      CONFIG_HEAP_POISONING_LIGHT: "y"
      CONFIG_ESP_SYSTEM_MEMPROT_FEATURE: "n"

external_components:
  - source: github://truffshuff/esphome-components
    components: [axs15231, sy6970]

spi:
  id: lily_spi
  type: quad
  clk_pin: 17
  data_pins: [13, 18, 21, 14]

captive_portal:

logger:
  level: INFO

esphome:
  name: ${name}
  on_boot:
    - priority: 800
      then:
        - delay: 50ms
        - lvgl.page.show: vertical_clock_page
        - logger.log: "Set initial page to Vertical Clock"
    - priority: -100
      then:
        - logger.log: "Boot sequence starting"
        - light.turn_off: rgb_light
        - delay: 1s
        - lambda: |-
            const std::string &choice = id(default_page_select_boot).state;
            if (choice == "Vertical Clock") {
              id(default_page_index) = 0;
            } else if (choice == "AirQ") {
              id(default_page_index) = 1;
            } else if (choice == "WiFi") {
              id(default_page_index) = 2;
            } else if (choice == "Weather") {
              id(default_page_index) = 3;
            } else {
              id(default_page_index) = 0;
            }
        - lvgl.page.show: vertical_clock_page

# Globals from core
globals:
  - id: cycleCounter
    type: int
    initial_value: '0'
  - id: temp_unit_changed
    type: bool
    initial_value: "true"
  - id: last_touch_time
    type: int
    initial_value: '0'
  - id: auto_page_rotation_enabled
    type: bool
    restore_value: yes
    initial_value: 'true'
  - id: auto_page_rotation_interval
    type: int
    restore_value: yes
    initial_value: '30'
  - id: last_auto_rotation_time
    type: unsigned long
    initial_value: '0'
  - id: default_page_index
    type: int
    restore_value: yes
    initial_value: '0'
  - id: current_page_index
    type: int
    initial_value: '0'
  - id: boot_complete
    type: bool
    initial_value: 'false'
  - id: ota_in_progress
    type: bool
    initial_value: 'false'
  - id: time_update_last_started
    type: int
    initial_value: '0'
  - id: time_update_last_duration
    type: int
    initial_value: '0'
  - id: time_update_last_text
    type: std::string
    initial_value: ""
  - id: time_update_needs_render
    type: bool
    initial_value: 'false'
  - id: display_backlight_is_on
    type: bool
    initial_value: 'true'
  - id: sensor_ui_dirty
    type: bool
    initial_value: 'false'
  - id: last_sensor_ui_update
    type: uint32_t
    initial_value: '0'

# Core switches
switch:
  - platform: template
    name: "Auto Page Rotation"
    id: auto_page_rotation
    icon: mdi:rotate-3d-variant
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    entity_category: "config"
    on_turn_on:
      - lambda: 'id(auto_page_rotation_enabled) = true;'
    on_turn_off:
      - lambda: 'id(auto_page_rotation_enabled) = false;'

  - platform: template
    name: "Startup Light Blink"
    id: startup_light_blink
    icon: mdi:lightbulb
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    entity_category: "config"

# Core select
select:
  - platform: template
    name: Display Temperature Unit
    id: display_temperature_unit
    entity_category: "Config"
    options: ["Fahrenheit", "Celsius", "Kelvin"]
    initial_option: "Fahrenheit"
    restore_value: true
    optimistic: true
    on_value:
      - globals.set:
          id: temp_unit_changed
          value: "true"

  - platform: template
    name: LED Effect
    id: led_effect_select
    entity_category: "Config"
    options:
      - "None"
      - "Rainbow Effect With Custom Values"
      - "Addressable Rainbow"
      - "Color Wipe"
      - "Scan"
      - "Twinkle"
      - "Fireworks"
      - "Strobe"
      - "Random Twinkle"
      - "AQI Color"
    initial_option: "None"
    restore_value: true
    optimistic: true

  - platform: template
    name: "Default Page at Boot"
    id: default_page_select_boot
    optimistic: true
    options:
      - "Vertical Clock"
    initial_option: "Vertical Clock"
    restore_value: true

# Core intervals
interval:
  - interval: 3s
    then:
      - if:
          condition:
            lambda: 'return id(boot_complete);'
          then:
            - script.execute: time_update

  - interval: 1s
    then:
      - if:
          condition:
            - binary_sensor.is_off: ink_ha_connected
            - lambda: 'return id(cycleCounter) < 30;'
            - switch.is_on: startup_light_blink
          then:
            - light.turn_on:
                id: rgb_light
                effect: "Addressable Rainbow"
            - lambda: 'id(cycleCounter) += 1;'

  - interval: 1s
    then:
      - if:
          condition:
            - binary_sensor.is_off: ink_ha_connected
            - lambda: 'return id(cycleCounter) > 30 && id(cycleCounter) < 31;'
            - switch.is_on: startup_light_blink
          then:
            - light.turn_off: rgb_light
            - lambda: 'id(cycleCounter) += 1;'

api:
  reboot_timeout: 0s
  encryption:
    key: ${api_encryption_key}
  on_client_connected:
    - delay: 1s
    - lambda: 'id(cycleCounter) = 30; id(boot_complete) = true;'

i2c:
  - sda: 9
    scl: 48
    id: lily_i2c
  - sda: 15
    scl: 10
    id: touch_i2c

output:
  - platform: ledc
    pin: 1
    id: backlight
    frequency: 100Hz

display:
  - platform: qspi_dbi
    id: lily_display
    model: AXS15231
    data_rate: 5MHz
    spi_id: lily_spi
    dimensions:
      height: 640
      width: 180
    cs_pin: 12
    reset_pin: 16
    rotation: 0
    auto_clear_enabled: false

touchscreen:
  - platform: axs15231
    id: lily_touch
    display: lily_display
    i2c_id: touch_i2c
    interrupt_pin: GPIO11
    update_interval: never
    transform:
      mirror_x: false
      mirror_y: false
      swap_xy: false
    on_touch:
      - lambda: |-
          if (touch.x < 0 || touch.x > 180 || touch.y < 0 || touch.y > 640) return;
          id(last_auto_rotation_time) = millis();

web_server:
  port: 80

image:
  - file: https://yashmulgaonkar.github.io/assets/YM.png
    id: ym_logo
    resize: 25x25
    type: RGB565
    transparency: alpha_channel

color:
  - id: my_red
    red: 100%
  - id: my_yellow
    red: 100%
    green: 100%
  - id: my_green
    green: 100%
  - id: my_blue
    blue: 100%
  - id: my_gray
    red: 50%
    green: 50%
    blue: 50%
  - id: my_orange
    red: 100%
    green: 50%
  - id: my_teal
    green: 100%
    blue: 100%
  - id: my_white
    red: 100%
    green: 100%
    blue: 100%
  - id: my_black

time:
  - platform: homeassistant
    id: ha_time
    on_time_sync:
      - script.execute: time_update
  - platform: sntp
    id: sntp_time
    timezone: America/New_York
    servers: [0.pool.ntp.org, 1.pool.ntp.org, 2.pool.ntp.org]
    on_time_sync:
      - script.execute: time_update

script:
  - id: page_transition_cleanup
    mode: queued
    max_runs: 2
    then:
      - if:
          condition:
            lambda: 'return id(boot_complete) && !id(ota_in_progress);'
          then:
            - delay: 50ms
            - lambda: |-
                lv_obj_t *scr = lv_scr_act();
                if (scr == NULL) return;
                id(time_update_last_text).clear();
                id(weather_last_condition).clear();
                lv_obj_invalidate(scr);
                lv_refr_now(NULL);

number:
  - platform: template
    name: "Auto Page Rotation Interval"
    id: page_rotation_interval
    icon: mdi:timer
    restore_value: true
    initial_value: 30
    min_value: 5
    max_value: 300
    entity_category: "config"
    unit_of_measurement: "s"
    optimistic: true
    step: 1
    mode: box
    on_value:
      - lambda: 'id(auto_page_rotation_interval) = (int)x;'

binary_sensor:
  - platform: status
    name: Online
    id: ink_ha_connected

  - platform: template
    name: "Display Backlight Active"
    id: display_backlight_state
    entity_category: "diagnostic"
    lambda: 'return id(display_backlight_is_on);'

sensor:
  - platform: template
    name: "Display Refresh Count"
    id: display_refresh_counter
    internal: true
    update_interval: never
    entity_category: "diagnostic"

  - platform: uptime
    name: Uptime
    id: sys_uptime
    update_interval: 60s

  - platform: template
    name: "Time Update Duration"
    id: time_update_duration_sensor
    internal: true
    unit_of_measurement: "ms"
    accuracy_decimals: 0
    icon: "mdi:timer-outline"
    entity_category: "diagnostic"
    update_interval: never

light:
  - platform: esp32_rmt_led_strip
    name: Halo
    id: rgb_light
    rgb_order: GRB
    pin: GPIO47
    num_leds: 12
    chipset: WS2812
    restore_mode: ALWAYS_OFF
    effects:
      - addressable_rainbow:
          name: Rainbow Effect With Custom Values
          speed: 10
          width: 50
      - addressable_rainbow:
          name: Addressable Rainbow
      - addressable_color_wipe:
          name: Color Wipe
      - addressable_scan:
          name: Scan
      - addressable_twinkle:
          name: Twinkle
      - addressable_fireworks:
          name: Fireworks
      - strobe:
          name: Strobe
      - addressable_random_twinkle:
          name: Random Twinkle

  - platform: monochromatic
    output: backlight
    name: "Display Backlight"
    id: display_backlight
    restore_mode: ALWAYS_ON
    on_turn_on:
      - lambda: 'id(display_backlight_is_on) = true;'
      - binary_sensor.template.publish:
          id: display_backlight_state
          state: ON
    on_turn_off:
      - lambda: 'id(display_backlight_is_on) = false;'
      - binary_sensor.template.publish:
          id: display_backlight_state
          state: OFF

lvgl:
  id: lvgl_main
  displays: [lily_display]
  touchscreens: [lily_touch]
  buffer_size: 30%
  disp_bg_color: 0x000000
  disp_bg_opa: COVER
  disp_bg_image: none
  log_level: WARN
  gradients:
    - id: wifi_signal_gradient
      direction: hor
      dither: none
      stops:
        - color: 0xFF0000
          position: 0
        - color: 0xFF8000
          position: 64
        - color: 0xFFFF00
          position: 128
        - color: 0x80FF00
          position: 192
        - color: 0x00FF00
          position: 255

button:
  - platform: restart
    icon: mdi:power-cycle
    name: "ESP Reboot"

  - platform: factory_reset
    disabled_by_default: True
    name: "Factory Reset ESP"
    id: factory_reset_all

# WiFi credentials
wifi:
  ssid: ${wifi_ssid}
  password: ${wifi_password}
  ap:
    ssid: "Halo-79e384-Fallback"
    password: "fallback12345"

# OTA
ota:
  - platform: esphome
    password: ${ota_password}
