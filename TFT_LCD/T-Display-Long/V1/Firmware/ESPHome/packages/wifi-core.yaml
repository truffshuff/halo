# ============================================================================
# WiFi Core Package - Page Rotation Controls and WiFi Signal Sensor
# ============================================================================
# This package contains WiFi page rotation controls and the WiFi signal sensor.
#
# Included Components:
#   - Page rotation globals (enabled/order)
#   - Page rotation switch (enable/disable WiFi page in rotation)
#   - Page rotation order number control
#   - WiFi signal strength sensor (RSSI)
#   - Home Assistant icon font for WiFi pages
#
# Dependencies:
#   - WiFi component configured in main config
#   - wifi-display.yaml or wireguard-display.yaml for display logic
#   - lvgl-wifi-wireguard-page.yaml or lvgl-wifi-page.yaml for page definition
# ============================================================================

font:
  # Material Design Icons font - 80pt for large Home Assistant status icon
  - file: "fonts/materialdesignicons-webfont.ttf"
    id: ha_icon_80
    size: 80
    bpp: 4
    glyphs: [
      "\U000F07D0", # home-assistant icon
      ]

globals:
  # Page rotation settings - which pages are included
  - id: page_rotation_wifi_enabled
    type: bool
    restore_value: yes
    initial_value: 'true'

  # Page rotation order (1-6, lower numbers show first)
  - id: page_rotation_wifi_order
    type: int
    restore_value: yes
    initial_value: '2'

switch:
  - platform: template
    name: "Page Rotation: WiFi Page"
    id: page_rotation_wifi_switch
    icon: mdi:wifi
    restore_mode: RESTORE_DEFAULT_ON
    optimistic: true
    entity_category: "config"
    on_turn_on:
      - lambda: 'id(page_rotation_wifi_enabled) = true;'
      - logger.log: "WiFi page enabled in rotation"
      # Force immediate display update when page rotation is enabled
      # Note: WireGuard-specific flags removed - they're handled by wireguard-display.yaml
      - if:
          condition:
            lambda: 'return id(current_page_index) == 2;'  # Only if on WiFi page
          then:
            - lambda: |-
                id(wifi_signal_needs_render) = true;
                id(wifi_signal_bar_needs_render) = true;
                id(wifi_ssid_needs_render) = true;
                id(wifi_ip_needs_render) = true;
                id(ha_status_needs_render) = true;
    on_turn_off:
      - lambda: 'id(page_rotation_wifi_enabled) = false;'
      - logger.log: "WiFi page disabled in rotation"

number:
  # Page rotation order numbers (1-6, lower numbers show first)
  - platform: template
    name: "Page Order: WiFi Page"
    id: page_order_wifi
    icon: mdi:numeric
    restore_value: true
    initial_value: 2
    min_value: 1
    max_value: 6
    entity_category: "config"
    optimistic: true
    step: 1
    mode: box
    on_value:
      - lambda: 'id(page_rotation_wifi_order) = (int)x;'
      - logger.log:
          format: "WiFi page order set to %d"
          args: ['(int)x']
      # Force immediate display update when page order changes
      - if:
          condition:
            lambda: 'return id(current_page_index) == 2;'  # Only if on WiFi page
          then:
            - lambda: |-
                id(wifi_signal_needs_render) = true;
                id(wifi_signal_bar_needs_render) = true;
                id(wifi_ssid_needs_render) = true;
                id(wifi_ip_needs_render) = true;
                id(ha_status_needs_render) = true;

sensor:
  - platform: wifi_signal
    name: RSSI
    id: wifi_signal_db
    update_interval: 60s
    entity_category: "diagnostic"
