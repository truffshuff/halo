# ============================================================================
# LVGL Pages - WireGuard-Only Configuration
# ============================================================================
# This package defines LVGL pages for devices with WiFi + WireGuard VPN
# (NO AirQ, NO Weather - just clock and VPN monitoring)
#
# Includes:
#   - Vertical Clock page
#   - WiFi + WireGuard page (combined, shows both WiFi and VPN status)
#   - Page rotation handler (embedded, Clock + WiFi+VPN)
#
# Excludes:
#   - AirQ page (use airq-stubs)
#   - Weather pages (use weather-stubs)
#   - BLE pages (use ble-stubs)
#
# Memory Impact: ~95KB total, ~115KB free
# BLE Compatible: YES (WireGuard-only + BLE)
#
# Usage: WiFi + WireGuard (VPN) monitoring only
# Requires:
#   - wifi-core.yaml, wifi-display.yaml
#   - wireguard.yaml, wireguard-display.yaml
#   - time-update-wireguard-only.yaml (NOT time-update-wireguard.yaml!)
# ============================================================================

lvgl:
  pages:
    # Core pages - always available
    - !include vertical-clock-display.yaml

    # WiFi page WITH WireGuard support
    - !include lvgl-wifi-wireguard-page.yaml

# ============================================================================
# PAGE ROTATION HANDLER - Embedded for Clock + WiFi + WireGuard configuration
# ============================================================================
# This handler supports: Clock and WiFi+WireGuard pages (NO AirQ)

interval:
  - interval: 100ms  # Check frequently for page index changes
    then:
      - if:
          condition:
            lambda: |-
              static int last_displayed_index = -1;

              // Don't do anything until boot is complete
              if (!id(boot_complete)) return false;

              // Check if page index has changed
              int current = id(current_page_index);
              if (current == last_displayed_index) return false;

              // Page index changed
              last_displayed_index = current;
              ESP_LOGD("page_rotation", "Page index changed to %d", current);
              return true;
          then:
            # Page 0: vertical_clock_page
            - if:
                condition:
                  lambda: 'return id(current_page_index) == 0;'
                then:
                  - logger.log: "Page rotation: Showing vertical_clock_page (index 0)"
                  - lvgl.page.show:
                      id: vertical_clock_page
                      animation: OUT_LEFT
                      time: 300ms
                else:
                  # Page 2: wifi_page
                  - if:
                      condition:
                        lambda: 'return id(current_page_index) == 2;'
                      then:
                        - logger.log: "Page rotation: Showing wifi_page (index 2)"
                        - lvgl.page.show:
                            id: wifi_page
                            animation: OUT_LEFT
                            time: 300ms
                      else:
                        # Unknown page - fall back to vertical clock
                        - logger.log:
                            format: "Page rotation: Page index %d not available, falling back to Vertical Clock"
                            args: ['id(current_page_index)']
                            level: WARN
                        - lvgl.page.show:
                            id: vertical_clock_page
                            animation: OUT_LEFT
                            time: 300ms

# ============================================================================
# TIME UPDATE SCRIPT - From time-update-wireguard-only.yaml
# ============================================================================
# The WireGuard package provides time_update script with SNTP/HA switching.
# This version does NOT try to update AirQ timeVal widget (which doesn't exist).
#
# The time_update script is included from time-update-wireguard-only.yaml
# which is designed specifically for WiFi + WireGuard only (NO AirQ).
