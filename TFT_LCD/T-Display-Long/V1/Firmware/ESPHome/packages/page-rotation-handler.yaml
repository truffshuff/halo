# ============================================================================
# Page Rotation Handler Package
# ============================================================================
# This package provides dynamic page rotation display handling that adapts
# to whatever pages are included in the LVGL pages configuration.
#
# Purpose:
#   - Core (Halo-v1-Core.yaml) calculates WHICH page to show (sets current_page_index)
#   - This handler watches current_page_index and DISPLAYS the appropriate page
#   - Works with any combination of enabled/disabled modules
#
# How it works:
#   1. Each LVGL pages package defines boolean flags for which pages exist
#   2. This handler uses those flags to conditionally compile page display code
#   3. When current_page_index changes, shows the appropriate page (if it exists)
#   4. Falls back to vertical_clock_page if index not found
#
# Usage in device files:
#   packages:
#     page_rotation_handler:
#       url: https://github.com/truffshuff/halo/
#       ref: main
#       files: [TFT_LCD/T-Display-Long/V1/Firmware/ESPHome/packages/page-rotation-handler.yaml]
#       refresh: always
#
# LVGL pages packages must define page existence flags (see lvgl-pages-*.yaml)
# ============================================================================

# Default page existence flags (will be overridden by LVGL pages packages)
# These ensure the handler doesn't fail if a package forgets to define them
substitutions:
  page_exists_vertical_clock: "true"   # Clock always exists
  page_exists_airq: "false"
  page_exists_wifi: "false"
  page_exists_weather: "false"
  page_exists_hourly_forecast: "false"
  page_exists_daily_forecast: "false"

# Interval that watches for page index changes and displays appropriate pages
interval:
  - interval: 100ms  # Check frequently for page index changes
    then:
      - if:
          condition:
            lambda: |-
              static int last_displayed_index = -1;

              // Don't do anything until boot is complete
              if (!id(boot_complete)) return false;

              // Check if page index has changed
              int current = id(current_page_index);
              if (current == last_displayed_index) return false;

              // Page index changed
              last_displayed_index = current;
              ESP_LOGD("page_rotation", "Page index changed to %d", current);
              return true;
          then:
            - lambda: |-
                int page_idx = id(current_page_index);
                bool page_found = false;

                ESP_LOGI("page_rotation", "Attempting to show page index %d", page_idx);

                // Page 0: Vertical Clock (always exists)
                if (page_idx == 0) {
                  ESP_LOGI("page_rotation", "Showing Vertical Clock page");
                  auto page = id(vertical_clock_page);
                  page->show(lv_scr_load_anim_t::LV_SCR_LOAD_ANIM_OUT_LEFT, 300, 0);
                  page_found = true;
                }

                ${{
                  # Only include AirQ code if page exists
                  if (page_exists_airq == "true") {
                    return R"(
                // Page 1: AirQ
                else if (page_idx == 1) {
                  ESP_LOGI("page_rotation", "Showing AirQ page");
                  auto page = id(AirQ_page);
                  page->show(lv_scr_load_anim_t::LV_SCR_LOAD_ANIM_OUT_LEFT, 300, 0);
                  page_found = true;
                }
                    )";
                  } else {
                    return "";
                  }
                }}

                ${{
                  # Only include WiFi code if page exists
                  if (page_exists_wifi == "true") {
                    return R"(
                // Page 2: WiFi
                else if (page_idx == 2) {
                  ESP_LOGI("page_rotation", "Showing WiFi page");
                  auto page = id(wifi_page);
                  page->show(lv_scr_load_anim_t::LV_SCR_LOAD_ANIM_OUT_LEFT, 300, 0);
                  page_found = true;
                }
                    )";
                  } else {
                    return "";
                  }
                }}

                ${{
                  # Only include Weather code if page exists
                  if (page_exists_weather == "true") {
                    return R"(
                // Page 3: Weather
                else if (page_idx == 3) {
                  ESP_LOGI("page_rotation", "Showing Weather page");
                  auto page = id(weather_forecast_page);
                  page->show(lv_scr_load_anim_t::LV_SCR_LOAD_ANIM_OUT_LEFT, 300, 0);
                  page_found = true;
                }
                    )";
                  } else {
                    return "";
                  }
                }}

                ${{
                  # Only include Hourly Forecast code if page exists
                  if (page_exists_hourly_forecast == "true") {
                    return R"(
                // Page 4: Hourly Forecast
                else if (page_idx == 4) {
                  ESP_LOGI("page_rotation", "Showing Hourly Forecast page");
                  auto page = id(weather_hourly_forecast_page);
                  page->show(lv_scr_load_anim_t::LV_SCR_LOAD_ANIM_OUT_LEFT, 300, 0);
                  page_found = true;
                }
                    )";
                  } else {
                    return "";
                  }
                }}

                ${{
                  # Only include Daily Forecast code if page exists
                  if (page_exists_daily_forecast == "true") {
                    return R"(
                // Page 5: Daily Forecast
                else if (page_idx == 5) {
                  ESP_LOGI("page_rotation", "Showing Daily Forecast page");
                  auto page = id(weather_daily_forecast_page);
                  page->show(lv_scr_load_anim_t::LV_SCR_LOAD_ANIM_OUT_LEFT, 300, 0);
                  page_found = true;
                }
                    )";
                  } else {
                    return "";
                  }
                }}

                // If page not found, fall back to vertical clock
                if (!page_found) {
                  ESP_LOGW("page_rotation", "Page index %d not available, falling back to Vertical Clock", page_idx);
                  auto page = id(vertical_clock_page);
                  page->show(lv_scr_load_anim_t::LV_SCR_LOAD_ANIM_OUT_LEFT, 300, 0);
                }
